// mixins for button
// ------------------------
.button-size(@height;
@padding;
@font-size;
@border-radius) {
    padding: @padding;
    font-size: @font-size;
    border-radius: @border-radius;
    height: @height;
}

.button-disabled() {
    &.disabled,
    &[disabled] {
        &,
        &:hover,
        &:focus,
        &:active,
        &.active {
            .button-color(@btn-disable-color;
            @btn-disable-bg;
            @btn-disable-border);
        }
    }
}

.button-varivcu-style(@color;
@background) {
    .button-color(@color;
    @background;
    @background);
    &:hover,
    &:focus {
        .button-color(@color;
        ~`colorPalette("@{background}", 5)`;
        ~`colorPalette("@{background}", 5)`);
    }
    &:active,
    &.active {
        .button-color(@color;
        ~`colorPalette("@{background}", 7)`;
        ~`colorPalette("@{background}", 7)`);
    }
    .button-disabled();
}

.button-varivcu-other(@color;
@background;
@border) {
    .button-color(@color;
    @background;
    @border);
    &:hover,
    &:focus {
        .button-color(@primary-5;
        @background;
        @primary-5);
    }
    &:active,
    &.active {
        .button-color(@primary-7;
        @background;
        @primary-7);
    }
    .button-disabled();
}

.button-varivcu-danger(@color;
@background;
@border) {
    .button-color(@color;
    @background;
    @border);
    &:hover {
        .button-color(@btn-primary-color;
        ~`colorPalette("@{color}", 5)`;
        ~`colorPalette("@{color}", 5)`);
    }
    &:focus {
        .button-color(~`colorPalette("@{color}", 5)`;
        #fff;
        ~`colorPalette("@{color}", 5)`);
    }
    &:active,
    &.active {
        .button-color(@btn-primary-color;
        ~`colorPalette("@{color}", 7)`;
        ~`colorPalette("@{color}", 7)`);
    }
    .button-disabled();
}

.button-varivcu-ghost(@color) {
    .button-color(@color;
    transparent;
    @color);
    &:hover,
    &:focus {
        .button-color(~`colorPalette("@{color}", 5)`;
        transparent;
        ~`colorPalette("@{color}", 5)`);
    }
    &:active,
    &.active {
        .button-color(~`colorPalette("@{color}", 7)`;
        transparent;
        ~`colorPalette("@{color}", 7)`);
    }
    .button-disabled();
}

.button-color(@color;
@background;
@border) {
    color: @color;
    background-color: @background;
    border-color: @border; // a inside Button which only work in Chrome
    // http://stackoverflow.com/a/17253457
    >a:only-child {
        color: currentColor;
        &:after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            bottom: 0;
            right: 0;
            background: transparent;
        }
    }
}

.button-group-base(@btnClassName) {
    position: relative;
    display: inline-block;
    >.@{btnClassName},
    >span>.@{btnClassName} {
        position: relative;
        line-height: @btn-height-base - 2px;
        &:hover,
        &:focus,
        &:active,
        &.active {
            z-index: 2;
        }
        &:disabled {
            z-index: 0;
        }
    } // size
    &-lg>.@{btnClassName},
    &-lg>span>.@{btnClassName} {
        .button-size(@btn-height-lg;
        @btn-padding-lg;
        @btn-font-size-lg;
        0);
        line-height: @btn-height-lg - 2px;
    }
    &-sm>.@{btnClassName},
    &-sm>span>.@{btnClassName} {
        .button-size(@btn-height-sm;
        @btn-padding-sm;
        @font-size-base;
        0);
        line-height: @btn-height-sm - 2px;
        >.@{iconfont-css-prefix} {
            font-size: @font-size-base;
        }
    }
}

// Base styles of buttons
// --------------------------------------------------
.btn() {
    display: inline-block;
    font-weight: @btn-font-weight;
    text-align: center;
    touch-action: manipulation;
    cursor: pointer;
    background-image: none;
    border: @border-width-base @border-style-base transparent;
    white-space: nowrap;
    .button-size(@btn-height-base;
    @btn-padding-base;
    @btn-font-size-sm;
    @btn-border-radius-base);
    user-select: none;
    transition: all .3s @ease-in-out;
    position: relative;
    >.@{iconfont-css-prefix} {
        line-height: 1;
    }
    &,
    &:active,
    &:focus {
        outline: 0;
    }
    &:not([disabled]):hover {
        text-decoration: none;
    }
    &:not([disabled]):active {
        outline: 0;
        transition: none;
    }
    &.disabled,
    &[disabled] {
        cursor: not-allowed;
        >* {
            pointer-events: none;
        }
    }
    &-sm {
        .button-size(@btn-height-sm;
        @btn-padding-sm;
        @btn-font-size-sm;
        @btn-border-radius-sm);
    }
    &-lg {
        .button-size(@btn-height-lg;
        @btn-padding-lg;
        @btn-font-size-lg;
        @btn-border-radius-base);
    }
}

// primary button style
.btn-primary() {
    .button-varivcu-style(@btn-primary-color;
    @btn-primary-bg);
}

// success button style
.btn-success() {
    .button-varivcu-style(@btn-style-color;
    @success-color;
    );
}

// info button style
.btn-info() {
    .button-varivcu-style(@btn-style-color;
    @info-color;
    );
}

// warning button style
.btn-warning() {
    .button-varivcu-style(@btn-style-color;
    @warning-color;
    );
}

// error button style
.btn-error() {
    .button-varivcu-style(@btn-style-color;
    @error-color;
    );
}

// default button style
.btn-default() {
    .button-varivcu-other(@btn-default-color;
    @btn-default-bg;
    @btn-default-border);
    &:hover,
    &:focus,
    &:active,
    &.active {
        background: @btn-default-bg;
        text-decoration: none;
    }
}

// ghost button style
.btn-ghost() {
    .button-varivcu-other(@btn-ghost-color, @btn-ghost-bg, @btn-ghost-border);
}

// dashed button style
.btn-dashed() {
    .button-varivcu-other(@btn-default-color, @btn-default-bg, @btn-default-border);
    border-style: dashed;
}

// danger button style
.btn-danger() {
    .button-varivcu-danger(@btn-danger-color, @btn-danger-bg, @btn-danger-border);
}

// circle button: the content only contains icon
.btn-circle(@btnClassName: btn) {
    .square(@btn-circle-size);
    .button-size(@btn-circle-size;
    0;
    @font-size-base + 2px;
    50%);
    &.@{btnClassName}-lg {
        .square(@btn-circle-size-lg);
        .button-size(@btn-circle-size-lg;
        0;
        @btn-font-size-lg + 2px;
        50%);
    }
    &.@{btnClassName}-sm {
        .square(@btn-circle-size-sm);
        .button-size(@btn-circle-size-sm;
        0;
        @font-size-base;
        50%);
    }
}

// Horizontal button groups styl
// --------------------------------------------------
.btn-group(@btnClassName: btn) {
    .button-group-base(@btnClassName);
    .@{btnClassName}+.@{btnClassName},
    .@{btnClassName}+&,
    span+.@{btnClassName},
    .@{btnClassName}+span,
    >span+span,
    &+.@{btnClassName},
    &+& {
        margin-left: -1px;
    }
    .@{btnClassName}-primary+.@{btnClassName}:not(.@{btnClassName}-primary):not([disabled]) {
        border-left-color: transparent;
    }
    .@{btnClassName} {
        border-radius: 0;
    }
    >.@{btnClassName}:first-child,
    >span:first-child>.@{btnClassName} {
        margin-left: 0;
    }
    >.@{btnClassName}:only-child {
        border-radius: @btn-border-radius-base;
    }
    >span:only-child>.@{btnClassName} {
        border-radius: @btn-border-radius-base;
    }
    >.@{btnClassName}:first-child:not(:last-child),
    >span:first-child:not(:last-child)>.@{btnClassName} {
        border-bottom-left-radius: @btn-border-radius-base;
        border-top-left-radius: @btn-border-radius-base;
    }
    >.@{btnClassName}:last-child:not(:first-child),
    >span:last-child:not(:first-child)>.@{btnClassName} {
        border-bottom-right-radius: @btn-border-radius-base;
        border-top-right-radius: @btn-border-radius-base;
    }
    &-sm {
        >.@{btnClassName}:only-child {
            border-radius: @btn-border-radius-sm;
        }
        >span:only-child>.@{btnClassName} {
            border-radius: @btn-border-radius-sm;
        }
        >.@{btnClassName}:first-child:not(:last-child),
        >span:first-child:not(:last-child)>.@{btnClassName} {
            border-bottom-left-radius: @btn-border-radius-sm;
            border-top-left-radius: @btn-border-radius-sm;
        }
        >.@{btnClassName}:last-child:not(:first-child),
        >span:last-child:not(:first-child)>.@{btnClassName} {
            border-bottom-right-radius: @btn-border-radius-sm;
            border-top-right-radius: @btn-border-radius-sm;
        }
    }
    &>& {
        float: left;
    }
    &>&:not(:first-child):not(:last-child)>.@{btnClassName} {
        border-radius: 0;
    }
    &>&:first-child:not(:last-child) {
        >.@{btnClassName}:last-child {
            border-bottom-right-radius: 0;
            border-top-right-radius: 0;
            padding-right: 8px;
        }
    }
    &>&:last-child:not(:first-child)>.@{btnClassName}:first-child {
        border-bottom-left-radius: 0;
        border-top-left-radius: 0;
        padding-left: 8px;
    }
}

///////////////////////////////////////////////////////////////////////////////////////////////
@btn-prefix-cls: ~"@{vcu-prefix}-btn";
// for compatible
@btn-ghost-color: @text-color;
@btn-ghost-bg: transparent;
@btn-ghost-border: @border-color-base;
// Button styles
// -----------------------------
.@{btn-prefix-cls} {
    line-height: @line-height-base;
    .btn;
    .btn-default; // Make sure that the target of Button's click event always be `button`
    // Ref: //7034
    >i,
    >span {
        pointer-events: none;
    }
    &-primary {
        .btn-primary;
        .@{btn-prefix-cls}-group &:not(:first-child):not(:last-child) {
            border-right-color: @btn-group-border;
            border-left-color: @btn-group-border;
            &:disabled {
                border-color: @btn-default-border;
            }
        }
        .@{btn-prefix-cls}-group &:first-child {
            &:not(:last-child) {
                border-right-color: @btn-group-border;
                &[disabled] {
                    border-right-color: @btn-default-border;
                }
            }
        }
        .@{btn-prefix-cls}-group &:last-child:not(:first-child),
        .@{btn-prefix-cls}-group &+& {
            border-left-color: @btn-group-border;
            &[disabled] {
                border-left-color: @btn-default-border;
            }
        }
    }
    &-ghost {
        .btn-ghost;
    }
    &-dashed {
        .btn-dashed;
    }
    &-danger {
        .btn-danger;
    }
    &-success {
        .btn-success;
    }
    &-warning {
        .btn-warning;
    }
    &-error {
        .btn-error;
    }
    &-info {
        .btn-info;
    }
    &-text {
        border-width: 0;
        background: transparent;
        color: @text-color;
        &:hover,
        &:active,
        &:focus {
            color: @link-color;
            background: transparent;
        }
    }
    &-block {
        width: 100%;
    }
    &-circle,
    &-circle-outline {
        .btn-circle(@btn-prefix-cls);
    }
    &:before {
        position: absolute;
        top: -1px;
        left: -1px;
        bottom: -1px;
        right: -1px;
        background: #fff;
        opacity: 0.35;
        content: '';
        border-radius: inherit;
        z-index: 1;
        transition: opacity .2s;
        pointer-events: none;
        display: none;
    }
    .@{iconfont-css-prefix} {
        transition: margin-left .3s @ease-in-out;
    }
    &&-loading:before {
        display: block;
    }
    &&-loading:not(&-circle):not(&-circle-outline):not(&-icon-only) {
        padding-left: 29px;
        pointer-events: none;
        position: relative;
        .@{iconfont-css-prefix} {
            margin-left: -14px;
        }
    }
    &-sm&-loading:not(&-circle):not(&-circle-outline):not(&-icon-only) {
        padding-left: 24px;
        .@{iconfont-css-prefix} {
            margin-left: -17px;
        }
    }
    &-group {
        .btn-group(@btn-prefix-cls);
    }
    &:not(&-circle):not(&-circle-outline)&-icon-only {
        padding-left: 8px;
        padding-right: 8px;
    } // http://stackoverflow.com/a/21281554/3040605
    &:focus>span,
    &:active>span {
        position: relative;
    } // To ensure that a space will be placed between character and `Icon`.
    >.@{iconfont-css-prefix}+span,
    >span+.@{iconfont-css-prefix} {
        margin-left: 8px;
    }
    &-background-ghost {
        background: transparent !important;
        border-color: #fff;
        color: #fff;
    }
    &-background-ghost&-primary {
        .button-varivcu-ghost(@btn-primary-bg);
    }
    &-background-ghost&-danger {
        .button-varivcu-ghost(@btn-danger-color);
    }
    &-two-chinese-chars:first-letter {
        letter-spacing: .34em;
    }
    &-two-chinese-chars>* {
        letter-spacing: .34em;
        margin-right: -.34em;
    }
}

&-block {
    width: 100%;
}

a.@{btn-prefix-cls} {
    line-height: @btn-height-base - 2px;
    &-lg {
        line-height: @btn-height-lg - 2px;
    }
    &-sm {
        line-height: @btn-height-sm - 2px;
    }
}